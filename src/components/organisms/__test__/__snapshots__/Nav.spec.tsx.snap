// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Nav /> Snapshot 1`] = `
<Component>
  <ThemeProvider
    theme={
      Object {
        "black": "rgb(5, 5, 5)",
        "buttonDefault": "rgba(0, 0, 0, 0.08)",
        "danger": "#D32F2F",
        "fontFamily": "\\"M PLUS Rounded 1c\\", sans-serif",
        "formBorderColor": "rgba(0, 0, 0, 0.16)",
        "formBorderColorDisabled": "rgba(0, 0, 0, 0.08)",
        "formBorderColorError": "#D32F2F",
        "formBorderColorFocused": "hsl(206, 100%, 31%)",
        "hoveredBg": "rgba(0, 0, 0, 0.03)",
        "inputPlaceHolder": "rgba(0, 0, 0, 0.09)",
        "primary": "hsl(206, 100%, 31%)",
        "primaryDark": "hsl(208, 80%, 27%)",
        "primaryHeavyDark": "hsl(208, 80%, 27%)",
        "primaryHeavyLight": "hsl(199, 91%, 64%);",
        "primaryLight": "hsl(201, 98%, 41%);",
        "primaryReverse": "hsla(0, 0%, 99%, 1);",
        "primaryReverseDark": "hsla(0, 0%, 99%, 0.5);",
        "secondary": "#689F38",
        "textGray": "hsla(0, 5%, 5%, .25)",
        "textMain": "hsl(0, 5%, 5%)",
        "white": "rgb(253, 253, 253)",
      }
    }
  >
    <MemoryRouter>
      <Router
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "canGo": [Function],
            "createHref": [Function],
            "entries": Array [
              Object {
                "hash": "",
                "key": "iyu6ya",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
            ],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "index": 0,
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "key": "iyu6ya",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
      >
        <Component
          path="transportation"
        >
          <styled.nav
            id="side-nav-bar"
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-hMqMXs",
                    "isStatic": false,
                    "lastClassName": "hMqybw",
                    "rules": Array [
                      "
  background-color: ",
                      [Function],
                      ";
  z-index: ",
                      "0",
                      ";
  box-shadow: ",
                      "0px 0px 5px #222222",
                      ";
",
                    ],
                  },
                  "displayName": "styled.nav",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-hMqMXs",
                  "target": "nav",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              id="side-nav-bar"
            >
              <nav
                className="sc-hMqMXs hMqybw"
                id="side-nav-bar"
              >
                <ul>
                  <li>
                    <WithTheme(Component)
                      selected={true}
                      to="transportation"
                    >
                      <Component
                        selected={true}
                        theme={
                          Object {
                            "black": "rgb(5, 5, 5)",
                            "buttonDefault": "rgba(0, 0, 0, 0.08)",
                            "danger": "#D32F2F",
                            "fontFamily": "\\"M PLUS Rounded 1c\\", sans-serif",
                            "formBorderColor": "rgba(0, 0, 0, 0.16)",
                            "formBorderColorDisabled": "rgba(0, 0, 0, 0.08)",
                            "formBorderColorError": "#D32F2F",
                            "formBorderColorFocused": "hsl(206, 100%, 31%)",
                            "hoveredBg": "rgba(0, 0, 0, 0.03)",
                            "inputPlaceHolder": "rgba(0, 0, 0, 0.09)",
                            "primary": "hsl(206, 100%, 31%)",
                            "primaryDark": "hsl(208, 80%, 27%)",
                            "primaryHeavyDark": "hsl(208, 80%, 27%)",
                            "primaryHeavyLight": "hsl(199, 91%, 64%);",
                            "primaryLight": "hsl(201, 98%, 41%);",
                            "primaryReverse": "hsla(0, 0%, 99%, 1);",
                            "primaryReverseDark": "hsla(0, 0%, 99%, 0.5);",
                            "secondary": "#689F38",
                            "textGray": "hsla(0, 5%, 5%, .25)",
                            "textMain": "hsl(0, 5%, 5%)",
                            "white": "rgb(253, 253, 253)",
                          }
                        }
                        to="transportation"
                      >
                        <MenuItem
                          disabled={false}
                          style={
                            Object {
                              "backgroundColor": "hsl(208, 80%, 27%)",
                            }
                          }
                        >
                          <styled.div
                            as="div"
                            disabled={false}
                            style={
                              Object {
                                "backgroundColor": "hsl(208, 80%, 27%)",
                              }
                            }
                          >
                            <StyledComponent
                              as="div"
                              disabled={false}
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-ifAKCX",
                                    "isStatic": false,
                                    "lastClassName": "bcZfdK",
                                    "rules": Array [
                                      "
  display: block;
  padding-left: 16px;
  padding-right: 16px;
  padding-top: 12px;
  padding-bottom: 12px;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5em;
  white-space: nowrap;
  text-overflow: ellipsis;
  cursor: pointer;

  &:hover {
    opacity: 0.7;
  }

  ",
                                      [Function],
                                      ";
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-ifAKCX",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              style={
                                Object {
                                  "backgroundColor": "hsl(208, 80%, 27%)",
                                }
                              }
                            >
                              <div
                                className="sc-ifAKCX blmhNe"
                                disabled={false}
                                style={
                                  Object {
                                    "backgroundColor": "hsl(208, 80%, 27%)",
                                  }
                                }
                              >
                                <Styled(Link)
                                  to="transportation"
                                >
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-EHOje",
                                          "isStatic": false,
                                          "lastClassName": "jKfzqM",
                                          "rules": Array [
                                            "
  color: ",
                                            [Function],
                                            ";
  display: block;
",
                                          ],
                                        },
                                        "displayName": "Styled(Link)",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "sc-EHOje",
                                        "target": [Function],
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    to="transportation"
                                  >
                                    <Link
                                      className="sc-EHOje jKfzqM"
                                      to="transportation"
                                    >
                                      <a
                                        className="sc-EHOje jKfzqM"
                                        href="/transportation"
                                        onClick={[Function]}
                                      >
                                        交通費
                                      </a>
                                    </Link>
                                  </StyledComponent>
                                </Styled(Link)>
                              </div>
                            </StyledComponent>
                          </styled.div>
                        </MenuItem>
                      </Component>
                    </WithTheme(Component)>
                  </li>
                  <li>
                    <WithTheme(Component)
                      selected={false}
                      to="attendance"
                    >
                      <Component
                        selected={false}
                        theme={
                          Object {
                            "black": "rgb(5, 5, 5)",
                            "buttonDefault": "rgba(0, 0, 0, 0.08)",
                            "danger": "#D32F2F",
                            "fontFamily": "\\"M PLUS Rounded 1c\\", sans-serif",
                            "formBorderColor": "rgba(0, 0, 0, 0.16)",
                            "formBorderColorDisabled": "rgba(0, 0, 0, 0.08)",
                            "formBorderColorError": "#D32F2F",
                            "formBorderColorFocused": "hsl(206, 100%, 31%)",
                            "hoveredBg": "rgba(0, 0, 0, 0.03)",
                            "inputPlaceHolder": "rgba(0, 0, 0, 0.09)",
                            "primary": "hsl(206, 100%, 31%)",
                            "primaryDark": "hsl(208, 80%, 27%)",
                            "primaryHeavyDark": "hsl(208, 80%, 27%)",
                            "primaryHeavyLight": "hsl(199, 91%, 64%);",
                            "primaryLight": "hsl(201, 98%, 41%);",
                            "primaryReverse": "hsla(0, 0%, 99%, 1);",
                            "primaryReverseDark": "hsla(0, 0%, 99%, 0.5);",
                            "secondary": "#689F38",
                            "textGray": "hsla(0, 5%, 5%, .25)",
                            "textMain": "hsl(0, 5%, 5%)",
                            "white": "rgb(253, 253, 253)",
                          }
                        }
                        to="attendance"
                      >
                        <MenuItem
                          disabled={false}
                          style={null}
                        >
                          <styled.div
                            as="div"
                            disabled={false}
                            style={null}
                          >
                            <StyledComponent
                              as="div"
                              disabled={false}
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-ifAKCX",
                                    "isStatic": false,
                                    "lastClassName": "bcZfdK",
                                    "rules": Array [
                                      "
  display: block;
  padding-left: 16px;
  padding-right: 16px;
  padding-top: 12px;
  padding-bottom: 12px;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5em;
  white-space: nowrap;
  text-overflow: ellipsis;
  cursor: pointer;

  &:hover {
    opacity: 0.7;
  }

  ",
                                      [Function],
                                      ";
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-ifAKCX",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              style={null}
                            >
                              <div
                                className="sc-ifAKCX blmhNe"
                                disabled={false}
                                style={null}
                              >
                                <Styled(Link)
                                  to="attendance"
                                >
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-EHOje",
                                          "isStatic": false,
                                          "lastClassName": "jKfzqM",
                                          "rules": Array [
                                            "
  color: ",
                                            [Function],
                                            ";
  display: block;
",
                                          ],
                                        },
                                        "displayName": "Styled(Link)",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "sc-EHOje",
                                        "target": [Function],
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    to="attendance"
                                  >
                                    <Link
                                      className="sc-EHOje jKfzqM"
                                      to="attendance"
                                    >
                                      <a
                                        className="sc-EHOje jKfzqM"
                                        href="/attendance"
                                        onClick={[Function]}
                                      >
                                        勤怠管理
                                      </a>
                                    </Link>
                                  </StyledComponent>
                                </Styled(Link)>
                              </div>
                            </StyledComponent>
                          </styled.div>
                        </MenuItem>
                      </Component>
                    </WithTheme(Component)>
                  </li>
                  <li>
                    <WithTheme(Component)
                      disabled={true}
                      selected={false}
                      to="resource"
                    >
                      <Component
                        disabled={true}
                        selected={false}
                        theme={
                          Object {
                            "black": "rgb(5, 5, 5)",
                            "buttonDefault": "rgba(0, 0, 0, 0.08)",
                            "danger": "#D32F2F",
                            "fontFamily": "\\"M PLUS Rounded 1c\\", sans-serif",
                            "formBorderColor": "rgba(0, 0, 0, 0.16)",
                            "formBorderColorDisabled": "rgba(0, 0, 0, 0.08)",
                            "formBorderColorError": "#D32F2F",
                            "formBorderColorFocused": "hsl(206, 100%, 31%)",
                            "hoveredBg": "rgba(0, 0, 0, 0.03)",
                            "inputPlaceHolder": "rgba(0, 0, 0, 0.09)",
                            "primary": "hsl(206, 100%, 31%)",
                            "primaryDark": "hsl(208, 80%, 27%)",
                            "primaryHeavyDark": "hsl(208, 80%, 27%)",
                            "primaryHeavyLight": "hsl(199, 91%, 64%);",
                            "primaryLight": "hsl(201, 98%, 41%);",
                            "primaryReverse": "hsla(0, 0%, 99%, 1);",
                            "primaryReverseDark": "hsla(0, 0%, 99%, 0.5);",
                            "secondary": "#689F38",
                            "textGray": "hsla(0, 5%, 5%, .25)",
                            "textMain": "hsl(0, 5%, 5%)",
                            "white": "rgb(253, 253, 253)",
                          }
                        }
                        to="resource"
                      >
                        <MenuItem
                          disabled={true}
                          style={null}
                        >
                          <styled.div
                            as="div"
                            disabled={true}
                            style={null}
                          >
                            <StyledComponent
                              as="div"
                              disabled={true}
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-ifAKCX",
                                    "isStatic": false,
                                    "lastClassName": "bcZfdK",
                                    "rules": Array [
                                      "
  display: block;
  padding-left: 16px;
  padding-right: 16px;
  padding-top: 12px;
  padding-bottom: 12px;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5em;
  white-space: nowrap;
  text-overflow: ellipsis;
  cursor: pointer;

  &:hover {
    opacity: 0.7;
  }

  ",
                                      [Function],
                                      ";
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-ifAKCX",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              style={null}
                            >
                              <div
                                className="sc-ifAKCX bcZfdK"
                                disabled={true}
                                style={null}
                              >
                                <styled.div
                                  to="resource"
                                >
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-bZQynM",
                                          "isStatic": false,
                                          "lastClassName": "cPlydf",
                                          "rules": Array [
                                            "
  color: ",
                                            [Function],
                                            ";
  opacity: 0.7;
",
                                          ],
                                        },
                                        "displayName": "styled.div",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "sc-bZQynM",
                                        "target": "div",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    to="resource"
                                  >
                                    <div
                                      className="sc-bZQynM cPlydf"
                                      to="resource"
                                    >
                                      資源管理
                                    </div>
                                  </StyledComponent>
                                </styled.div>
                              </div>
                            </StyledComponent>
                          </styled.div>
                        </MenuItem>
                      </Component>
                    </WithTheme(Component)>
                  </li>
                </ul>
              </nav>
            </StyledComponent>
          </styled.nav>
        </Component>
      </Router>
    </MemoryRouter>
  </ThemeProvider>
</Component>
`;
